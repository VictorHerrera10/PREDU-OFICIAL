rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Secure user profiles stored under /users/{userId}/profile.
     * @path /users/{userId}/profile
     * @allow (create) - User 'test_user' with UID 'user_abc' can create their profile at /users/user_abc/profile if request.auth.uid == 'user_abc' and request.resource.data.id == 'user_abc'.
     * @allow (get) - User 'test_user' with UID 'user_abc' can read their profile at /users/user_abc/profile.
     * @allow (update) - User 'test_user' with UID 'user_abc' can update their profile at /users/user_abc/profile if request.auth.uid == 'user_abc' and request.resource.data.id == resource.data.id.
     * @allow (delete) - User 'test_user' with UID 'user_abc' can delete their profile at /users/user_abc/profile if request.auth.uid == 'user_abc'.
     * @deny (create) - User 'test_user' with UID 'user_xyz' cannot create a profile at /users/user_abc/profile.
     * @deny (get) - User 'test_user' with UID 'user_xyz' cannot read the profile at /users/user_abc/profile.
     * @deny (update) - User 'test_user' with UID 'user_xyz' cannot update the profile at /users/user_abc/profile.
     * @deny (delete) - User 'test_user' with UID 'user_xyz' cannot delete the profile at /users/user_abc/profile.
     * @principle Enforces document ownership and path consistency for user profiles.
     */
    match /users/{userId}/profile {
      // Helper function to check if the user is signed in.
      function isSignedIn() {
        return request.auth != null;
      }

      // Helper function to check if the authenticated user is the owner of the document.
      function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
      }

      // Helper function to check if the authenticated user is the existing owner of the document.
      function isExistingOwner(userId) {
        return isSignedIn() && request.auth.uid == userId && exists(resource);
      }

      // Read rules
      allow get: if isOwner(userId);

      // Write rules
      allow create: if isOwner(userId) && request.resource.data.id == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.data.id;
      allow delete: if isExistingOwner(userId);
    }
  }
}